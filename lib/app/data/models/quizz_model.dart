///
/// Code generated by jsonToDartModel https://ashamp.github.io/jsonToDartModel/
///
class QuizModelDataQuestion {
/*
{
  "questionText": "Which of the following is a synonym for benevolent",
  "answer": 2,
  "points": 10,
  "options": [
    "Malevolent "
  ],
  "_id": "65b2784d2ea2c9ecd2012732"
} 
*/

  String? questionText;
  int? answer;
  int? points;
  List<String?>? options;
  String? Id;

  QuizModelDataQuestion({
    this.questionText,
    this.answer,
    this.points,
    this.options,
    this.Id,
  });
  QuizModelDataQuestion.fromJson(Map<String, dynamic> json) {
    questionText = json['questionText']?.toString();
    answer = json['answer']?.toInt();
    points = json['points']?.toInt();
  if (json['options'] != null) {
  final v = json['options'];
  final arr0 = <String>[];
  v.forEach((v) {
  arr0.add(v.toString());
  });
    options = arr0;
    }
    Id = json['_id']?.toString();
  }
}

class QuizModelDataConductedBy {
/*
{
  "_id": "657021118c2337e8d3e2e307",
  "name": "John Doe",
  "__t": "Teachers"
} 
*/

  String? Id;
  String? name;
  String? T;

  QuizModelDataConductedBy({
    this.Id,
    this.name,
    this.T,
  });
  QuizModelDataConductedBy.fromJson(Map<String, dynamic> json) {
    Id = json['_id']?.toString();
    name = json['name']?.toString();
    T = json['__t']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['_id'] = Id;
    data['name'] = name;
    data['__t'] = T;
    return data;
  }
}

class QuizModelData {
/*
{
  "_id": "65b2784d2ea2c9ecd2012731",
  "subject": "English",
  "conductedBy": {
    "_id": "657021118c2337e8d3e2e307",
    "name": "John Doe",
    "__t": "Teachers"
  },
  "date": "2024-01-25",
  "image": "",
  "topicCover": [
    ""
  ],
  "instructions": "Understand the Question and then only answer ",
  "question": [
    {
      "questionText": "Which of the following is a synonym for benevolent",
      "answer": 2,
      "points": 10,
      "options": [
        "Malevolent "
      ],
      "_id": "65b2784d2ea2c9ecd2012732"
    }
  ],
  "isDeleted": false,
  "createdAt": "2024-01-25T15:03:41.178Z",
  "updatedAt": "2024-01-25T15:03:41.178Z",
  "__v": 0
} 
*/

  String? Id;
  String? subject;
  QuizModelDataConductedBy? conductedBy;
  String? date;
  String? image;
  List<String?>? topicCover;
  String? instructions;
  List<QuizModelDataQuestion?>? question;
  bool? isDeleted;
  String? createdAt;
  String? updatedAt;
  int? V;

  QuizModelData({
    this.Id,
    this.subject,
    this.conductedBy,
    this.date,
    this.image,
    this.topicCover,
    this.instructions,
    this.question,
    this.isDeleted,
    this.createdAt,
    this.updatedAt,
    this.V,
  });
  QuizModelData.fromJson(Map<String, dynamic> json) {
    Id = json['_id']?.toString();
    subject = json['subject']?.toString();
    conductedBy = (json['conductedBy'] != null) ? QuizModelDataConductedBy.fromJson(json['conductedBy']) : null;
    date = json['date']?.toString();
    image = json['image']?.toString();
  if (json['topicCover'] != null) {
  final v = json['topicCover'];
  final arr0 = <String>[];
  v.forEach((v) {
  arr0.add(v.toString());
  });
    topicCover = arr0;
    }
    instructions = json['instructions']?.toString();
  if (json['question'] != null) {
  final v = json['question'];
  final arr0 = <QuizModelDataQuestion>[];
  v.forEach((v) {
  arr0.add(QuizModelDataQuestion.fromJson(v));
  });
    question = arr0;
    }
    isDeleted = json['isDeleted'];
    createdAt = json['createdAt']?.toString();
    updatedAt = json['updatedAt']?.toString();
    V = json['__v']?.toInt();
  }

}

class QuizModel {
/*
{
  "status": true,
  "result": 2,
  "data": [
    {
      "_id": "65b2784d2ea2c9ecd2012731",
      "subject": "English",
      "conductedBy": {
        "_id": "657021118c2337e8d3e2e307",
        "name": "John Doe",
        "__t": "Teachers"
      },
      "date": "2024-01-25",
      "image": "",
      "topicCover": [
        ""
      ],
      "instructions": "Understand the Question and then only answer ",
      "question": [
        {
          "questionText": "Which of the following is a synonym for benevolent",
          "answer": 2,
          "points": 10,
          "options": [
            "Malevolent "
          ],
          "_id": "65b2784d2ea2c9ecd2012732"
        }
      ],
      "isDeleted": false,
      "createdAt": "2024-01-25T15:03:41.178Z",
      "updatedAt": "2024-01-25T15:03:41.178Z",
      "__v": 0
    }
  ]
} 
*/

  bool? status;
  int? result;
  List<QuizModelData?>? data;

  QuizModel({
    this.status,
    this.result,
    this.data,
  });
  QuizModel.fromJson(Map<String, dynamic> json) {
    status = json['status'];
    result = json['result']?.toInt();
  if (json['data'] != null) {
  final v = json['data'];
  final arr0 = <QuizModelData>[];
  v.forEach((v) {
  arr0.add(QuizModelData.fromJson(v));
  });
    this.data = arr0;
    }
  }

}



